name: Publish to npm

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Check if version changed
        id: version-check
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

          # Check if this version is already published
          if npm view @ultranomic/hook@$PACKAGE_VERSION version 2>/dev/null; then
            echo "Version $PACKAGE_VERSION already published, skipping..."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "Version $PACKAGE_VERSION not published, proceeding..."
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.version-check.outputs.skip == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.skip == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.version }}
          release_name: Release v${{ steps.version-check.outputs.version }}
          body: |
            Published version ${{ steps.version-check.outputs.version }} to npm

            Install with:
            ```
            npm install @ultranomic/hook@${{ steps.version-check.outputs.version }}
            ```
          draft: false
          prerelease: false
